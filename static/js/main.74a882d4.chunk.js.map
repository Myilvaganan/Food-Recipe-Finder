{"version":3,"sources":["RecipeCards.jsx","Recipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","minHeight","maxWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","deepOrange","RecipeReviewCard","props","classes","React","useState","expanded","setExpanded","calorie","Math","floor","calories","Card","className","CardHeader","Avatar","aria-label","title","action","IconButton","subheader","source","CardMedia","image","CardContent","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","Typography","paragraph","ingredients","map","ingredient","text","Recipe","App","recipes","setRecipes","search","setSearch","query","setQuery","example_Url","useEffect","getRecipes","a","fetch","response","json","data","hits","noValidate","autoComplete","onSubmit","e","preventDefault","Input","placeholder","type","value","onChange","target","Button","variant","startIcon","size","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74a882d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300,\r\n    minHeight: 400,\r\n    maxWidth: 350,\r\n    margin: \"0.5rem\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const calorie = Math.floor(props.calories);\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {props.title[0]}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={props.title}\r\n        subheader={props.source}\r\n      />\r\n      <CardMedia className={classes.media} image={props.image} />\r\n      <CardContent>Calories: {calorie} g</CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Ingredients:</Typography>\r\n          <ol>\r\n            {props.ingredients.map((ingredient) => (\r\n              <li>{ingredient.text}</li>\r\n            ))}\r\n          </ol>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport RecipeCard from \"./RecipeCards\";\r\nimport \"./App.css\";\r\n\r\nconst Recipe = ({ title, calories, image, ingredients, source}) => {\r\n\r\n  return <RecipeCard  title={title} calories={calories} image={image} ingredients={ingredients} source={source} />;\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useState, useEffect } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./App.css\";\n\nconst App = () => {\n  /*   const classes = useStyles();*/\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const APP_ID = \"6ad59d2f\";\n  const APP_KEY = \"07416716df80e17aa65d0e7f10cfdbe0\";\n  const example_Url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(example_Url);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const getInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n    };\n\n  return (\n    <div className=\"main\">\n      <div className=\"opacity-reducer\"></div>\n\n      <div className=\"App\">\n        <form noValidate autoComplete=\"off\" onSubmit={getSearch}>\n          <p className=\"text\">Myil's Kitchen</p>\n          <Input\n            placeholder=\"Search here for Delicious Food...\"\n            type=\"text\"\n            value={search}\n            onChange={getInput}\n          />\n          <Button\n            variant=\"contained\"\n            startIcon={<SearchIcon />}\n            size=\"medium\"\n            type=\"submit\"\n          >\n            RECIPE\n          </Button>\n        </form>\n\n        <div className=\"Content\">\n          {recipes.map((recipe) => (\n            <Recipe\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              source={recipe.recipe.source}\n              className=\"Card\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}